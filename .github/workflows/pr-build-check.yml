name: PR Build Check

# Trigger on pull requests to develop or deployment branches
on:
  pull_request:
    branches: [develop, deployment]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'package*.json'

env:
  NODE_VERSION: '18'

jobs:
  frontend-build:
    name: Frontend Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: TypeScript compilation check
        working-directory: ./frontend
        run: npx tsc --noEmit
        
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        
      - name: Verify build success
        working-directory: ./frontend
        run: |
          if [ ! -d "dist" ]; then
            echo "‚ùå Frontend build failed - dist directory not found"
            exit 1
          fi
          echo "‚úÖ Frontend build successful"

  backend-build:
    name: Backend Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'
          
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
        
      - name: Build backend
        working-directory: ./backend
        run: npm run build
        
      - name: Verify build success
        working-directory: ./backend
        run: |
          if [ ! -d "dist" ]; then
            echo "‚ùå Backend build failed - dist directory not found"
            exit 1
          fi
          echo "‚úÖ Backend build successful"

  build-status:
    name: Build Status Summary
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-build]
    if: always()
    
    steps:
      - name: Check build results
        run: |
          echo "## üèóÔ∏è Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.frontend-build.result }}" = "success" ]; then
            echo "‚úÖ **Frontend Build**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Frontend Build**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.backend-build.result }}" = "success" ]; then
            echo "‚úÖ **Backend Build**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Backend Build**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.frontend-build.result }}" = "success" ] && [ "${{ needs.backend-build.result }}" = "success" ]; then
            echo "üéâ **All builds passed successfully!**" >> $GITHUB_STEP_SUMMARY
            echo "‚úÖ All builds passed - PR is ready for review!"
          else
            echo "üí• **One or more builds failed!**" >> $GITHUB_STEP_SUMMARY
            echo "‚ùå Build failures detected - please fix before merging"
            exit 1
          fi
