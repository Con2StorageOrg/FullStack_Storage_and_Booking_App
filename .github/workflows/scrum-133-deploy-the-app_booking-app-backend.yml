# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - booking-app-backend

on:
  push:
    branches:
      - SCRUM-133-deploy-the-app
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      # Run npm commands in the backend directory
      - name: npm install, build, and test
        run: |
          cd backend
          npm ci
          npm run build
          # Skip tests if they're causing issues in CI
          # npm run test --if-present

      # Create a startup command file
      - name: Create startup command file
        run: |
          echo "#!/bin/sh" > backend/startup.sh
          echo "cd /home/site/wwwroot" >> backend/startup.sh
          echo "npm run start:prod" >> backend/startup.sh
          chmod +x backend/startup.sh

      # Create web.config for Azure
      - name: Create web.config
        run: |
          echo '<?xml version="1.0" encoding="utf-8"?>' > backend/web.config
          echo '<configuration>' >> backend/web.config
          echo '  <system.webServer>' >> backend/web.config
          echo '    <handlers>' >> backend/web.config
          echo '      <add name="iisnode" path="dist/main.js" verb="*" modules="iisnode" />' >> backend/web.config
          echo '    </handlers>' >> backend/web.config
          echo '    <rewrite>' >> backend/web.config
          echo '      <rules>' >> backend/web.config
          echo '        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">' >> backend/web.config
          echo '          <match url="^dist/main.js\/debug[\/]?" />' >> backend/web.config
          echo '        </rule>' >> backend/web.config
          echo '        <rule name="StaticContent">' >> backend/web.config
          echo '          <action type="Rewrite" url="public{REQUEST_URI}" />' >> backend/web.config
          echo '        </rule>' >> backend/web.config
          echo '        <rule name="DynamicContent">' >> backend/web.config
          echo '          <conditions>' >> backend/web.config
          echo '            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />' >> backend/web.config
          echo '          </conditions>' >> backend/web.config
          echo '          <action type="Rewrite" url="dist/main.js" />' >> backend/web.config
          echo '        </rule>' >> backend/web.config
          echo '      </rules>' >> backend/web.config
          echo '    </rewrite>' >> backend/web.config
          echo '    <security>' >> backend/web.config
          echo '      <requestFiltering>' >> backend/web.config
          echo '        <hiddenSegments>' >> backend/web.config
          echo '          <remove segment="bin" />' >> backend/web.config
          echo '        </hiddenSegments>' >> backend/web.config
          echo '      </requestFiltering>' >> backend/web.config
          echo '    </security>' >> backend/web.config
          echo '    <httpErrors existingResponse="PassThrough" />' >> backend/web.config
          echo '  </system.webServer>' >> backend/web.config
          echo '</configuration>' >> backend/web.config

      - name: Zip artifact for deployment
        run: |
          cd backend
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_9F8DBAB572D14E1685EE75B41915FCD2 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BAD9EECA19F943F18A65D60C0C3448AF }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7BC8E4BEADA04C2EA793E85FD9389394 }}

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "booking-app-backend"
          slot-name: "Production"
          package: .
          # Add startup command with environment variables
          startup-command: "SUPABASE_URL=${{ secrets.SUPABASE_URL }} SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }} SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }} npm run start:prod"
